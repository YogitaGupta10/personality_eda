# -*- coding: utf-8 -*-
"""customer personality analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1abdEn5IL0-m_UfvgpnxbTKiTj7i808RF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler

df= pd.read_csv('/content/marketing_campaign 2.csv', sep="\t" )

df.head()

df.info()

df.describe()

sns.heatmap(df.corr())

cr= df.corr()
cr_df=cr['Response'].sort_values(ascending= False)
cr_df

df.isnull().sum()

median_income = df["Income"].median()
df["Income"].fillna(median_income, inplace=True)

df.isnull().sum()

df.dtypes

# cols = df.columns
# for col in cols:
#   print(col)

#   print(df[col].unique())
#   print('------------------')

df['Marital_Status'].unique()

import datetime

df['Dt_Customer']=pd.to_datetime(df['Dt_Customer'])

df.hist(bins=20, figsize =(15,10), color= 'blue', edgecolor='yellow')

df['Age']= 2023- df['Year_Birth']

df.columns

df['Expenditure']= df['MntFishProducts']+ df['MntWines']+ df['MntFruits']+df['MntMeatProducts']+df['MntSweetProducts']+ df['MntGoldProds']

df['Totalpurcahse']= df['NumDealsPurchases']= df['NumWebPurchases']+ df['NumCatalogPurchases']+ df['NumStorePurchases']

df['Children']=df['Kidhome'] + df['Teenhome']

df=df.rename(columns={'MntWines': 'Wines','MntFruits':'Fruits','MntMeatProducts':'Meat','MntFishProducts':'Fish',
                          'MntSweetProducts':'Sweets','MntGoldProds':'Gold'})

df['Partner/Spouse'] = df['Marital_Status'].replace({'Married':'Yes', 'Together':'Yes', 'Single':'No', 'Divorced':'No',
                                                'Widow':'No', 'Absurd':'No', 'YOLO':'No','Alone': "No"})

df['Education']=df['Education'].replace({'Basic':'Undergraduate','2n Cycle':'Undergraduate','Graduation':'Postgraduate','Master':'Postgraduate','PhD':'Postgraduate'})

dropp=['Marital_Status','Z_CostContact','Z_Revenue','Year_Birth','ID']

df.drop(dropp,inplace=True,axis=1)

cols = df.columns
for col in cols:
  print(col)

  print(df[col].unique())
  print('------------------')

df.head()

sns.scatterplot(data=df, x="Expenditure", y='Income', color ='maroon',alpha=0.5)

plt.bar(df['Expenditure'], df['Income'], color ='maroon',
        width = 0.4)

plt.bar(df['Totalpurcahse'], df['Income'], color ='maroon',
        width = 0.4)

plt.bar(df['Partner/Spouse'], df['Income'], color ='maroon',
        width = 0.4)

plt.bar(df['Partner/Spouse'], df['Totalpurcahse'], color ='maroon',
        width = 0.4)

plt.bar(df['Children'], df['Totalpurcahse'], color ='maroon',
        width = 0.4)

plt.bar(df['Children'], df['Income'], color ='maroon',
        width = 0.4)

plt.boxplot(df['Income'])
plt.show()

sns.histplot(df['Expenditure'], color='maroon', kde=True, bins='auto', alpha=0.5, fill=True)

sns.histplot(df['Age'], color='maroon', kde=True, bins='auto', alpha=0.5, fill=True)

sns.histplot(df['Income'], color='maroon', kde=True, bins='auto', alpha=0.5, fill=True)

df=df[(df['Age']<90)]
df=df[(df['Income']<300000)]

from sklearn.preprocessing import StandardScaler, normalize

scaler=StandardScaler()
dataset_temp=df[['Income','Expenditure']]
X_std=scaler.fit_transform(dataset_temp)
X = normalize(X_std,norm='l2')

from sklearn import metrics
from sklearn.mixture import GaussianMixture

gmm=GaussianMixture(n_components=4, covariance_type='spherical',max_iter=2000, random_state=5).fit(X)
labels = gmm.predict(X)
dataset_temp['Cluster'] = labels
dataset_temp=dataset_temp.replace({0:'Stars',1:'Need attention',2:'High potential',3:'Leaky bucket'})
df = df.merge(dataset_temp.Cluster, left_index=True, right_index=True)

pd.options.display.float_format = "{:.0f}".format
summary=df[['Income','Expenditure','Cluster']]
summary.set_index("Cluster", inplace = True)
summary=summary.groupby('Cluster').describe().transpose()
summary.head()

